#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>

//int cmp(const void *p1, const void *p2)
//{
//	return (*(int *)p1 - *(int *)p2);
//}
//void _swap(void *p1, void * p2, int size) 
//{
//	int i = 0;
//	for (i = 0; i< size; i++)
//	{
//		char tmp = *((char *)p1 + i);
//		*((char *)p1 + i) = *((char *)p2 + i);
//		*((char *)p2 + i) = tmp;
//	}
//}
//void bubble(void *base, int count, int size, int(*cmp)(void *, void *))
//{
//	int i = 0;
//	int j = 0;
//	for (i = 0; i< count - 1; i++)
//	{
//		for (j = 0; j<count - i - 1; j++)
//		{
//			if (cmp((char *)base + j*size, (char *)base + (j + 1)*size) > 0)
//			{
//				_swap((char *)base + j*size, (char *)base + (j + 1)*size, size);
//			}
//		}
//	}
//}
//int main()
//{
//	int arr[] = { 1, 3, 5, 7, 9, 2, 4, 6, 8, 0 };
//	for (int i = 0; i< sizeof(arr) / sizeof(arr[0]); i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	printf("\n");
//	//char *arr[] = {"aaaa","dddd","cccc","bbbb"};
//	int i = 0;
//	bubble(arr, sizeof(arr) / sizeof(arr[0]), sizeof(int), cmp);
//	for (i = 0; i< sizeof(arr) / sizeof(arr[0]); i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	printf("\n");
//	system("pause");
//	return 0;
//}

int cmp(const void *p1, const void *p2)
{
	return (*(int *)p1 - *(int *)p2);
}
void swap(void *p1, void *p2,int size)
{
	/*
	// 只是用于交换数字的
	if (*(int *)p1 > *(int *)p2)
	{
		int t = *(int *)p1;
		*(int *)p1 = *(int *)p2;
		*(int *)p2 = t;
	}*/
	for (int i = 0; i < size; i++)
	{
		//if (*(char *)p1 > *(char *)p2)
		//{
		char tmp = *((char *)p1 + i);
		*((char *)p1 + i) = *((char *)p2 + i);
		*((char *)p2 + i) = tmp;
		//}
	}

}
void myqsort(void *a, int n,int size, int(*cmp)(void *, void*))
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = 0; j < n - 1 - i; j++)
		{
			if (cmp((char *)a + j*size, (char *)a + (j + 1)*size) > 0)
			{
				swap((char *)a + j*size, (char *)a + (j + 1)*size,size);
			}
		}
	}
}

int main()
{
	int arr[] = { 4, 8, 7, 5, 2, 9, 1, 3, 8, 0 };
	
	
	int s = sizeof(arr) / sizeof(arr[0]);
	for (int i = 0; i < s; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	myqsort(arr, s,sizeof(int), cmp);
	for (int i = 0; i < s; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	system("pause");
	return 0;
}

